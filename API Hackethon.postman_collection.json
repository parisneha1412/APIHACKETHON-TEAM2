{
	"info": {
		"_postman_id": "235b3543-0572-4975-a980-a3f0c3cbaa9b",
		"name": "API Hackethon",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26275755"
	},
	"item": [
		{
			"name": "New Folder",
			"item": []
		},
		{
			"name": "Admin token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"res = JSON.parse(responseBody)",
							"value = res.token",
							"console.log(value)",
							"pm.collectionVariables.set(\"Admintoken\", value);",
							"",
							"pm.test(\"Body contains string\",() => {",
							"  pm.expect(pm.response.text()).to.include(\"token\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"password\": \"test\",\n  \"userLoginEmail\": \"Team14@gmail.com\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}login",
					"host": [
						"{{baseUrl}}login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Ditecian",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"res = JSON.parse(responseBody)",
							"value = res.id",
							"console.log(value)",
							"pm.collectionVariables.set(\"dieticianId\", value);",
							"",
							"value1 = res.loginPassword",
							"console.log(value1)",
							"pm.collectionVariables.set(\"DieticianPassword\", value1);",
							"",
							"pm.test(\"Body contains string\",() => {",
							"  pm.expect(pm.response.text()).to.include(\"id\");",
							"",
							"value2 = res.Email",
							"console.log(value2)",
							"pm.collectionVariables.set(\"DieticianEmail\", value2);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Admintoken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"ContactNumber\": \"9872942902\",\n  \"DateOfBirth\": \"1991-07-25T18:14:08.570Z\",\n  \"Education\": \"BE\",\n  \"Email\": \"Mclean3@gmail.com\",\n  \"Firstname\": \"Mclean\",\n  \"HospitalCity\": \"1518\",\n  \"HospitalName\": \"shore\",\n  \"HospitalPincode\": \"413515\",\n  \"HospitalStreet\": \"sw road\",\n  \"Lastname\": \"Lincon\"\n \n}\n\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}dietician",
					"host": [
						"{{baseUrl}}dietician"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Ditecian token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"res = JSON.parse(responseBody)",
							"value = res.token",
							"console.log(value)",
							"pm.collectionVariables.set(\"Dieticiantoken\", value);",
							"",
							"pm.test(\"Body contains string\",() => {",
							"  pm.expect(pm.response.text()).to.include(\"token\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"password\": \"{{DieticianPassword}}\",\n  \"userLoginEmail\": \"{{DieticianEmail}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}login",
					"host": [
						"{{baseUrl}}login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Newpatient",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"if (pm.response.code === 200) {",
							"    pm.test(\"Verify the expected status code is 200\", function () {",
							"        pm.response.to.have.status(200);",
							"    });",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"dieticianId\", jsonData.id);",
							"    pm.collectionVariables.set(\"dieticianPassword\",jsonData.loginPassword);",
							"}else if (pm.response.code === 201) {",
							"    pm.test(\"Verify the expected status code is 201\", function () {",
							"        pm.response.to.have.status(201);",
							"    });",
							"    res = JSON.parse(responseBody)",
							"value3 = res.patientId",
							"console.log(value3)",
							"pm.collectionVariables.set(\"newpatientID\", value3);",
							"",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"dieticianId\", jsonData.id);",
							"    pm.collectionVariables.set(\"dieticianPassword\",jsonData.loginPassword);",
							"} else if (pm.response.code === 401) {",
							"    pm.test(\"Validate status code 401\", function () {",
							"        pm.response.to.have.status(401);",
							"    });",
							"    if(jsonData!=null){",
							"    pm.test(\"message: \"+jsonData.message,()=>{",
							"    console.log(\"Message is: \",jsonData.message);",
							"});}",
							"} else if (pm.response.code === 400) {",
							"    pm.test(\"Validate status code 400\", function () {",
							"        pm.response.to.have.status(400);",
							"    });",
							"    if(jsonData!=null){",
							"    pm.test(\"message: \"+jsonData.message,()=>{",
							"    console.log(\"Message is: \",jsonData.message);",
							"});}",
							"}else if (pm.response.code === 404) {",
							"    pm.test(\"Validate Status code is 404\", function () {",
							"        pm.response.to.have.status(404);",
							"    });",
							"    if(jsonData!=null){",
							"    pm.test(\"message: \"+jsonData.message,()=>{",
							"    console.log(\"Message is: \",jsonData.message);",
							"});}",
							"} else {",
							"    pm.test(\"Unexpected status code: \" + pm.response.code, function () {",
							"        pm.expect(pm.response.code).to.be.oneOf([500, 503]);",
							"    });",
							"    if(jsonData!=null){",
							"    pm.test(\"error: \"+jsonData.error,()=>{",
							"    console.log(\"Error is: \",jsonData.error);",
							"});}",
							"}",
							" pm.test(\"Content-type header is present\", () => {",
							"    pm.response.to.have.header(\"Content-type\");",
							"});",
							"",
							"pm.test(\"Content-type header is application/json\", () => {",
							"    pm.expect(pm.response.headers.get('Content-type')).to.equal('application/json');",
							"});",
							"",
							"pm.test(\"response time is less than 200ms\", () => {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"",
							"",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Dieticiantoken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "patientInfo\n",
							"value": "{ \"FirstName\": \"adam\",\n\"LastName\": \"Hacktwo\",\n\"ContactNumber\": \"9962743813\",\n\"Email\": \"adam8@gmail.com\",\n\"Allergy\": \"SOY\",\n\"FoodPreference\": \"Vegan\",\n\"CuisineCategory\":\"Indian\",\n\"DateOfBirth\": \"1981-03-14\"\n}",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": "postman-cloud:///1ef51b30-8334-4bb0-946e-21610c53811f"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}patient/",
					"host": [
						"{{baseUrl}}patient"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Update patient",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"// Log the jsonData for debugging",
							"console.log(jsonData);",
							"",
							"// Status code validation",
							"pm.test(\"Verify the expected status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Header validation",
							"pm.test(\"Content-type header is present\", function () {",
							"    pm.response.to.have.header(\"Content-type\");",
							"});",
							"",
							"pm.test(\"Content-type header is application/json\", function () {",
							"    pm.expect(pm.response.headers.get('Content-type')).to.equal('application/json');",
							"});",
							"",
							"pm.test(\"response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							"",
							"// JSON schema validator",
							"const schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"patientId\": { \"type\": \"integer\" },",
							"        \"FirstName\": { \"type\": \"string\" },",
							"        \"LastName\": { \"type\": \"string\" },",
							"        \"ContactNumber\": { \"type\": \"string\" },",
							"        \"Email\": { \"type\": \"string\" },",
							"        \"Allergy\": { \"type\": \"string\" },",
							"        \"FoodPreference\": { \"type\": \"string\" },",
							"        \"CuisineCategory\": { \"type\": \"string\" },",
							"        \"FileMorbidity\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"66b00977a2b35b78f82f7b80\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"T3\": { \"type\": \"string\" },",
							"                        \"T4\": { \"type\": \"string\" },",
							"                        \"TSH\": { \"type\": \"string\" }",
							"                    },",
							"                    \"required\": [\"T3\", \"T4\", \"TSH\"]",
							"                }",
							"            },",
							"            \"required\": [\"66b00977a2b35b78f82f7b80\"]",
							"        },",
							"        \"FileMorbidityCondition\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"66b00977a2b35b78f82f7b80\": { \"type\": \"string\" }",
							"            },",
							"            \"required\": [\"66b00977a2b35b78f82f7b80\"]",
							"        },",
							"        \"DateOfBirth\": { \"type\": \"string\" },",
							"        \"DieticianId\": { \"type\": \"integer\" },",
							"        \"Vitals\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"                \"66b00977a2b35b78f82f7b80\": {",
							"                    \"type\": \"object\",",
							"                    \"properties\": {",
							"                        \"Weight\": { \"type\": \"number\" },",
							"                        \"Height\": { \"type\": \"number\" },",
							"                        \"Temperature\": { \"type\": \"number\" },",
							"                        \"SP\": { \"type\": \"integer\" },",
							"                        \"DP\": { \"type\": \"integer\" }",
							"                    },",
							"                    \"required\": [\"Weight\", \"Height\", \"Temperature\", \"SP\", \"DP\"]",
							"                }",
							"            },",
							"            \"required\": [\"66b00977a2b35b78f82f7b80\"]",
							"        },",
							"        \"LastVisitDate\": { \"type\": \"string\" }",
							"    },",
							"    \"required\": [",
							"        \"patientId\",",
							"        \"FirstName\",",
							"        \"LastName\",",
							"        \"ContactNumber\",",
							"        \"Email\",",
							"        \"Allergy\",",
							"        \"FoodPreference\",",
							"        \"CuisineCategory\",",
							"        \"FileMorbidity\",",
							"        \"FileMorbidityCondition\",",
							"        \"DateOfBirth\",",
							"        \"DieticianId\",",
							"        \"Vitals\",",
							"        \"LastVisitDate\"",
							"    ]",
							"};",
							"",
							"const validationResult = tv4.validateMultiple(jsonData, schema);",
							"",
							"// Log validation errors if any",
							"if (!validationResult.valid) {",
							"    console.log(validationResult.errors);",
							"}",
							"",
							"pm.test('schema is valid', function () {",
							"    pm.expect(validationResult.valid).to.be.true;",
							"});",
							"",
							"// Fixed the test for the field in response",
							"pm.test(\"values of the field in response\",()=> {",
							"pm.expect(jsonData.patientId).to.equal(pm.collectionVariables.get(\"newpatientID\"));",
							"    ",
							"pm.expect(jsonData.FirstName).to.eql(\"adam\");",
							"pm.expect(jsonData.LastName).to.eq(\"Hacktwo\");",
							"pm.expect(jsonData.Email).to.eq(\"adam8@gmail.com\");",
							" pm.expect(jsonData.DateOfBirth).to.eq(\"1981-03-14\");",
							" pm.expect(jsonData.ContactNumber).to.equal(\"9962743813\");",
							"    ",
							"    pm.expect(jsonData.Allergy).to.equal(pm.collectionVariables.get(\"Allergy\"));",
							"    pm.expect(jsonData.FoodPreference).to.equal(pm.collectionVariables.get(\"FoodPreference\"));",
							"    pm.expect(jsonData.CuisineCategory).to.equal(pm.collectionVariables.get(\"CuisineCategory\"));",
							"    ",
							"    pm.expect(jsonData.DieticianId).to.equal(1174);",
							"    ",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Define arrays for cuisine categories and food preferences",
							"var cuisineCategories = [",
							"    \"Indian\", \"South Indian\", \"Rajasthani\", \"Punjabi\", \"Bengali\", \"Orissa\",",
							"    \"Gujarati\", \"Maharashtrian\", \"Andhra\", \"Kerala\", \"Goan\", \"Kashmiri\",",
							"    \"Himachali\", \"Tamil Nadu\", \"Karnataka\", \"Sindhi\", \"Chhattisgarhi\",",
							"    \"Madhya Pradesh\", \"Assamese\", \"Manipuri\", \"Tripuri\", \"Sikkimese\",",
							"    \"Mizo\", \"Arunachali\", \"Uttarakhand\", \"Haryanvi\", \"Awadhi\", \"Bihari\",",
							"    \"Uttar Pradesh\", \"Delhi\", \"North Indian\", \"Italian\", \"French\", \"Arabic\",",
							"    \"Lebanese\", \"Thai\", \"Mexican\", \"American\"",
							"];",
							"",
							"var foodPreferences = [",
							"    \"Vegan\", \"Vegetarian\", \"Jain\", \"Eggitarian\", \"NonVeg\"",
							"];",
							"var allergies = [",
							"    \"SOY\", \"ALMOND\", \"WALNUT\", \"PISTACHO\", \"SESAME\", \"PECAN\",",
							"    \"CASHEW\", \"PEANUT\", \"EGG\", \"MILK\", \"NONE\"",
							"    ];",
							"",
							"// Function to get a random element from an array",
							"function getRandomElement(arr) {",
							"    return arr[Math.floor(Math.random() * arr.length)];",
							"}",
							"",
							"// Randomly select a cuisine category and food preference",
							"var selectedCuisineCategory = getRandomElement(cuisineCategories);",
							"var selectedFoodPreference = getRandomElement(foodPreferences);",
							"var selectedAllergy = getRandomElement(allergies);",
							"",
							"// Set the variables in Postman",
							"pm.collectionVariables.set(\"CuisineCategory\", selectedCuisineCategory);",
							"pm.collectionVariables.set(\"FoodPreference\", selectedFoodPreference);",
							"pm.collectionVariables.set(\"Allergy\", selectedAllergy);",
							"let currentDate = new Date().toISOString();",
							"",
							"// Set the local variable",
							"pm.variables.set(\"LastVisitDate\", currentDate);",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Dieticiantoken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "patientInfo",
							"value": "{ \"FirstName\": \"adam\",\n\"LastName\": \"Hacktwo\",\n\"ContactNumber\": \"9962743813\",\n\"Email\": \"adam8@gmail.com\",\n\"Allergy\": \"{{Allergy}}\",\n\"FoodPreference\": \"{{FoodPreference}}\",\n\"CuisineCategory\":\"{{CuisineCategory}}\",\n\"DateOfBirth\": \"1981-03-14\"\n}",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": [],
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}patient/851",
					"host": [
						"{{baseUrl}}patient"
					],
					"path": [
						"851"
					]
				}
			},
			"response": [
				{
					"name": "Update patient",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "patientInfo",
									"value": "{ \"FirstName\": \"adam12\",\n\"LastName\": \"Hacktwo\",\n\"ContactNumber\": \"9860942801\",\n\"Email\": \"adam@gmail.com\",\n\"Allergy\": \"SOY\",\n\"FoodPreference\": \"Vegetarian\",\n\"CuisineCategory\":\"Indian\",\n\"DateOfBirth\": \"1988-03-14\"\n}",
									"type": "text"
								},
								{
									"key": "",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}patient/124",
							"host": [
								"{{baseUrl}}patient"
							],
							"path": [
								"124"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "patients details by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"// Log the jsonData for debugging",
							"console.log(jsonData);",
							"",
							"// Status code validation",
							"pm.test(\"Verify the expected status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Header validation",
							"pm.test(\"Content-type header is present\", function () {",
							"    pm.response.to.have.header(\"Content-type\");",
							"});",
							"",
							"pm.test(\"Content-type header is application/json\", function () {",
							"    pm.expect(pm.response.headers.get('Content-type')).to.equal('application/json');",
							"});",
							"",
							"pm.test(\"response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							"",
							"const schema = {",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"  \"type\": \"array\",",
							"  \"items\": {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"      \"fileId\": {",
							"        \"type\": \"string\"",
							"      },",
							"      \"fileName\": {",
							"        \"type\": \"string\"",
							"      },",
							"      \"uploadDate\": {",
							"        \"type\": \"string\"",
							"      },",
							"      \"morbidConditions\": {",
							"        \"type\": \"object\",",
							"        \"properties\": {",
							"          \"T3\": {",
							"            \"type\": \"string\"",
							"          },",
							"          \"T4\": {",
							"            \"type\": \"string\"",
							"          },",
							"          \"TSH\": {",
							"            \"type\": \"string\"",
							"          }",
							"        },",
							"        \"required\": [",
							"          \"T3\",",
							"          \"T4\",",
							"          \"TSH\"",
							"        ]",
							"      },",
							"      \"vitals\": {",
							"        \"type\": \"object\",",
							"        \"properties\": {",
							"          \"Weight\": {",
							"            \"type\": \"number\"",
							"          },",
							"          \"Height\": {",
							"            \"type\": \"number\"",
							"          },",
							"          \"Temperature\": {",
							"            \"type\": \"number\"",
							"          },",
							"          \"SP\": {",
							"            \"type\": \"integer\"",
							"          },",
							"          \"DP\": {",
							"            \"type\": \"integer\"",
							"          }",
							"        },",
							"        \"required\": [",
							"          \"Weight\",",
							"          \"Height\",",
							"          \"Temperature\",",
							"          \"SP\",",
							"          \"DP\"",
							"        ]",
							"      },",
							"      \"morbidConditionStr\": {",
							"        \"type\": \"string\"",
							"      }",
							"    },",
							"    \"required\": [",
							"      \"fileId\",",
							"      \"fileName\",",
							"      \"uploadDate\",",
							"      \"morbidConditions\",",
							"      \"vitals\",",
							"      \"morbidConditionStr\"",
							"    ]",
							"  }",
							"};",
							"",
							"pm.test('schema is valid', function () {",
							"    var result = tv4.validateMultiple(jsonData, schema);",
							"    if (!result.valid) {",
							"        console.log('Schema validation errors:', result.errors);",
							"    }",
							"    pm.expect(result.valid).to.be.true;",
							"});",
							"",
							"// Value validation",
							"pm.test(\"values of the field in response\", () => {",
							"    const data = jsonData[0];",
							"    ",
							"    pm.expect(data.fileId).to.equal(\"66b00977a2b35b78f82f7b80\");",
							"    pm.expect(data.fileName).to.equal(\"HyperThyroid_Report_final.pdf\");",
							"    ",
							"    // Validate uploadDate",
							"    let responseUploadDate = new Date(data.uploadDate).toISOString().split('T')[0];",
							"    let expectedUploadDate = \"2024-08-04\"; // Only comparing the date part for tolerance",
							"    pm.expect(responseUploadDate).to.equal(expectedUploadDate);",
							"",
							"    pm.expect(data.morbidConditions.T3).to.equal(\"\");",
							"    pm.expect(data.morbidConditions.T4).to.equal(\"\");",
							"    pm.expect(data.morbidConditions.TSH).to.equal(\"\");",
							"    pm.expect(data.vitals.Weight).to.equal(0);",
							"    pm.expect(data.vitals.Height).to.equal(0);",
							"    pm.expect(data.vitals.Temperature).to.equal(0);",
							"    pm.expect(data.vitals.SP).to.equal(0);",
							"    pm.expect(data.vitals.DP).to.equal(0);",
							"    pm.expect(data.morbidConditionStr).to.equal(\"\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Dieticiantoken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}patient/testReports/851",
					"host": [
						"{{baseUrl}}patient"
					],
					"path": [
						"testReports",
						"851"
					]
				}
			},
			"response": []
		},
		{
			"name": "patient details by file id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Check the Content-Type header",
							"var contentType = pm.response.headers.get('Content-Type');",
							"",
							"// Handle JSON responses",
							"if (contentType && contentType.includes('application/json')) {",
							"    try {",
							"        var jsonData = pm.response.json();",
							"",
							"        ",
							"",
							"        ",
							"    } catch (e) {",
							"        // Handle cases where JSON parsing fails",
							"        pm.test(\"Failed to parse JSON\", function () {",
							"            console.log(\"Error parsing JSON response:\", e);",
							"        });",
							"    }",
							"} else {",
							"    // Handle non-JSON responses",
							"    pm.test(\"Response is not JSON\", function () {",
							"        pm.expect(contentType).to.include('application/pdf'); // Adjust to expected content type if needed",
							"    });",
							"    ",
							"    // Log raw response if needed",
							"    console.log(pm.response.text());",
							"}",
							"",
							"// Common tests",
							"pm.test(\"Content-Type header is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Dieticiantoken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}patient/testReports/viewFile/66afbfe6a2b35b78f82f7a03",
					"host": [
						"{{baseUrl}}patient"
					],
					"path": [
						"testReports",
						"viewFile",
						"66afbfe6a2b35b78f82f7a03"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{baseUrl}}patient/124",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"if (pm.response.code === 200) {",
							"    pm.test(\"Verify the expected status code is 200\", function () {",
							"        pm.response.to.have.status(200);",
							"    });",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"dieticianId\", jsonData.id);",
							"    pm.collectionVariables.set(\"dieticianPassword\",jsonData.loginPassword);",
							"}else if (pm.response.code === 201) {",
							"    pm.test(\"Verify the expected status code is 201\", function () {",
							"        pm.response.to.have.status(201);",
							"    });",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"dieticianId\", jsonData.id);",
							"    pm.collectionVariables.set(\"dieticianPassword\",jsonData.loginPassword);",
							"} else if (pm.response.code === 401) {",
							"    pm.test(\"Validate status code 401\", function () {",
							"        pm.response.to.have.status(401);",
							"    });",
							"    if(jsonData!=null){",
							"    pm.test(\"message: \"+jsonData.message,()=>{",
							"    console.log(\"Message is: \",jsonData.message);",
							"});}",
							"} else if (pm.response.code === 400) {",
							"    pm.test(\"Validate status code 400\", function () {",
							"        pm.response.to.have.status(400);",
							"    });",
							"    if(jsonData!=null){",
							"    pm.test(\"message: \"+jsonData.message,()=>{",
							"    console.log(\"Message is: \",jsonData.message);",
							"});}",
							"}else if (pm.response.code === 404) {",
							"    pm.test(\"Validate Status code is 404\", function () {",
							"        pm.response.to.have.status(404);",
							"    });",
							"    if(jsonData!=null){",
							"    pm.test(\"message: \"+jsonData.message,()=>{",
							"    console.log(\"Message is: \",jsonData.message);",
							"});}",
							"} else {",
							"    pm.test(\"Unexpected status code: \" + pm.response.code, function () {",
							"        pm.expect(pm.response.code).to.be.oneOf([500, 503]);",
							"    });",
							"    if(jsonData!=null){",
							"    pm.test(\"error: \"+jsonData.error,()=>{",
							"    console.log(\"Error is: \",jsonData.error);",
							"});}",
							"}",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Dieticiantoken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "patientInfo",
							"value": "{ \"FirstName\": \"adam12\",\n\"LastName\": \"Hacktwo\",\n\"ContactNumber\": \"9860942804\",\n\"Email\": \"adam@gmail.com\",\n\"Allergy\": \"pistachio\",\n\"FoodPreference\": \"Vegetarian\",\n\"CuisineCategory\":\"karnataka\",\n\"DateOfBirth\": \"1988-03-18\"\n}",
							"type": "text"
						},
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}patient/124",
					"host": [
						"{{baseUrl}}patient"
					],
					"path": [
						"124"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{baseUrl}}patient/124",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"if (pm.response.code === 200) {",
							"    pm.test(\"Verify the expected status code is 200\", function () {",
							"        pm.response.to.have.status(200);",
							"    });",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"dieticianId\", jsonData.id);",
							"    pm.collectionVariables.set(\"dieticianPassword\",jsonData.loginPassword);",
							"}else if (pm.response.code === 201) {",
							"    pm.test(\"Verify the expected status code is 201\", function () {",
							"        pm.response.to.have.status(201);",
							"    });",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"dieticianId\", jsonData.id);",
							"    pm.collectionVariables.set(\"dieticianPassword\",jsonData.loginPassword);",
							"} else if (pm.response.code === 401) {",
							"    pm.test(\"Validate status code 401\", function () {",
							"        pm.response.to.have.status(401);",
							"    });",
							"    if(jsonData!=null){",
							"    pm.test(\"message: \"+jsonData.message,()=>{",
							"    console.log(\"Message is: \",jsonData.message);",
							"});}",
							"} else if (pm.response.code === 400) {",
							"    pm.test(\"Validate status code 400\", function () {",
							"        pm.response.to.have.status(400);",
							"    });",
							"    if(jsonData!=null){",
							"    pm.test(\"message: \"+jsonData.message,()=>{",
							"    console.log(\"Message is: \",jsonData.message);",
							"});}",
							"}else if (pm.response.code === 404) {",
							"    pm.test(\"Validate Status code is 404\", function () {",
							"        pm.response.to.have.status(404);",
							"    });",
							"    if(jsonData!=null){",
							"    pm.test(\"message: \"+jsonData.message,()=>{",
							"    console.log(\"Message is: \",jsonData.message);",
							"});}",
							"} else {",
							"    pm.test(\"Unexpected status code: \" + pm.response.code, function () {",
							"        pm.expect(pm.response.code).to.be.oneOf([500, 503]);",
							"    });",
							"    if(jsonData!=null){",
							"    pm.test(\"error: \"+jsonData.error,()=>{",
							"    console.log(\"Error is: \",jsonData.error);",
							"});}",
							"}",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Dieticiantoken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "patientInfo",
							"value": "{ \"FirstName\": \"adam12\",\n\"LastName\": \"Hacktwo\",\n\"ContactNumber\": \"9860942801\",\n\"Email\": \"adam@gmail.com\",\n\"Allergy\": \"SOY\",\n\"FoodPreference\": \"Vegetarian\",\n\"CuisineCategory\":\"Indian\",\n\"DateOfBirth\": \"1988-03-14\"\n}",
							"type": "text"
						},
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}patient/124",
					"host": [
						"{{baseUrl}}patient"
					],
					"path": [
						"124"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Request",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Dieticiantoken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}patient/772",
					"host": [
						"{{baseUrl}}patient"
					],
					"path": [
						"772"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician",
			"value": "hackathon"
		},
		{
			"key": "baseUrl",
			"value": "https://dietician-july-api-hackathon-80f2590665cc.herokuapp.com/dietician/"
		},
		{
			"key": "Admintoken",
			"value": ""
		},
		{
			"key": "dieticianId",
			"value": ""
		},
		{
			"key": "DieticianPassword",
			"value": ""
		},
		{
			"key": "Dieticiantoken",
			"value": ""
		},
		{
			"key": "dieticianPassword",
			"value": ""
		},
		{
			"key": "DieticianEmail",
			"value": ""
		},
		{
			"key": "CuisineCategory",
			"value": ""
		},
		{
			"key": "FoodPreference",
			"value": ""
		},
		{
			"key": "Allergy",
			"value": ""
		},
		{
			"key": "newpatientID",
			"value": ""
		}
	]
}